name: PR Build (self-hosted, containers)

env:
  SFDX_USE_GENERIC_UNIX_KEYCHAIN: "true"
  PROD_INST_URL: "https://login.salesforce.com"
  TEST_INST_URL: "https://test.salesforce.com"

on:
  workflow_call:
    inputs:
      SCRATCH_ORG_JSON:
        required: true
        type: string
      CCI_FLOW_NAME:
        required: true
        type: string
      SCRATCH_ORG_USERNAME:
        required: true
        type: string
      SCRATCH_ORG_ALIAS:
        required: true
        type: string
      RUN_NPM_INSTALL:
        required: false
        type: boolean
        default: false
      DO_NOT_BUILD:
        required: false
        type: boolean
        default: false
      CONTAINER_USERNAME:
        type: string
        required: true
    secrets:
      BUILD_SSH_RSA_KEY:
        required: true
      DEVHUB_CLIENTID:
        required: true
      DEVHUB_KEY:
        required: true
      DEVHUB_USERNAME:
        required: true
      CUMULUSCI_SERVICE_GITHUB:
        required: true
      CONTAINER_PASSWORD:
        required: true
jobs:
  build:
    runs-on: [self-hosted, test, docker]
    container:
      image: ghcr.io/fonteva/gh-action-ubuntu-sfdx-cci:latest
      credentials:
        username: ${{ secrets.CONTAINER_USERNAME }}
        password: ${{ secrets.CONTAINER_PASSWORD }}
      env:
        DEVHUB_USERNAME: ${{ secrets.DEVHUB_USERNAME }}
        DEVHUB_CLIENTID: ${{ secrets.DEVHUB_CLIENTID }}
        DEVHUB_KEY: ${{ secrets.DEVHUB_KEY }}
        CUMULUSCI_SERVICE_github: ${{ secrets.CUMULUSCI_SERVICE_GITHUB }}
        SCRATCH_ORG_JSON: ${{ inputs.SCRATCH_ORG_JSON }}
        CCI_FLOW_NAME: ${{ inputs.CCI_FLOW_NAME }}
        SCRATCH_ORG_USERNAME: ${{ inputs.SCRATCH_ORG_USERNAME }}
        SCRATCH_ORG_ALIAS: ${{ inputs.SCRATCH_ORG_ALIAS }}
        SFDX_CLIENT_ID: ${{ secrets.DEVHUB_CLIENTID }}
        DEVHUB_KEY_FILE: devhub.key
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.BUILD_SSH_RSA_KEY }}
          submodules: true

      - name: Update Build Submodule
        if: ${{ github.event.action != 'closed' && !inputs.DO_NOT_BUILD }}
        run: |
          cd build
          git checkout master
          git pull

      - name: NPM Install
        if: ${{ github.event.action != 'closed' && inputs.RUN_NPM_INSTALL && !inputs.DO_NOT_BUILD }}
        run: |
          export PATH="/usr/local/lib/nodejs/bin:$PATH"
          echo $PATH
          npm install
          npm install @salesforce/sfdx-lwc-jest --save-dev

      - name: Authorize Devhub
        run: |
          export PATH="$PATH:/opt/sfdx/bin"
          if [ ! -e ~/$DEVHUB_KEY_FILE ]; then
            echo "$DEVHUB_KEY" | base64 -d > ~/$DEVHUB_KEY_FILE
            echo "** Running 'sfdx auth:jwt:grant' ..."
            sfdx auth:jwt:grant --clientid $DEVHUB_CLIENTID --username $DEVHUB_USERNAME --jwtkeyfile ~/$DEVHUB_KEY_FILE --setdefaultdevhubusername --instanceurl $PROD_INST_URL
          fi
          v=$(sfdx config:get defaultdevhubusername --json | jq -r '.result[0].value')
          if [ "$v" = "null" ]; then
            echo "** Running 'sfdx force:config:set' ..."
            sfdx force:config:set defaultdevhubusername=$DEVHUB_USERNAME
          fi

      - name: Build
        if: ${{ github.event.action != 'closed' && !inputs.DO_NOT_BUILD }}
        run: |
          ACTIVE_SCRATCH=$(sfdx force:data:soql:query -q "SELECT SignupUsername FROM ScratchOrgInfo where Status='Active' and SignupUsername='$SCRATCH_ORG_USERNAME'" -u $DEVHUB_USERNAME --json)
          COUNT=`echo "$ACTIVE_SCRATCH" | jq -r '.result.totalSize'`
          if [ $COUNT -gt 0 ];then
            echo "** Using existing scratch org"
            echo "** Running 'sfdx auth:jwt:grant' ..."
            sfdx auth:jwt:grant --clientid $DEVHUB_CLIENTID --username $SCRATCH_ORG_USERNAME --jwtkeyfile ~/$DEVHUB_KEY_FILE --instanceurl $TEST_INST_URL
            sfdx force:user:display -u $SCRATCH_ORG_USERNAME
            cciOrgVar="CUMULUSCI_ORG_$SCRATCH_ORG_ALIAS"
            echo $cciOrgVar
            printf -v $cciOrgVar '{"username": "'$SCRATCH_ORG_USERNAME'", "instance_url": "'$TEST_INST_URL'"}'
            echo $(sh -c "echo \$$cciOrgVar")
            export $cciOrgVar
            echo ${!cciOrgVar}
            export SFDX_HUB_KEY=$(echo "$DEVHUB_KEY" | base64 -d)
          else
            echo "** Creating new scratch org"
            echo "** Running 'sfdx force:org:create' ..."
            sfdx force:org:create -f $SCRATCH_ORG_JSON username=$SCRATCH_ORG_USERNAME -d 30
            echo "** Running 'sfdx force:config:set' ..."
            sfdx force:config:set defaultdevhubusername=$DEVHUB_USERNAME
            echo "** Running 'sfdx force:user:password:generate' ..."
            sfdx force:user:password:generate -u $SCRATCH_ORG_USERNAME
            sfdx force:user:display -u $SCRATCH_ORG_USERNAME
            cci org import $SCRATCH_ORG_USERNAME $SCRATCH_ORG_ALIAS
          fi
          echo "** Running 'cci flow run $CCI_FLOW_NAME' ..."
          cci flow run $CCI_FLOW_NAME --org $SCRATCH_ORG_ALIAS

      - name: Delete Scratch Org
        if: ${{ github.event.action == 'closed' }}
        run: |
          echo "** Deleting scratch org $SCRATCH_ORG_USERNAME"
          sfdx force:data:record:delete --sobjecttype ActiveScratchOrg --targetusername $DEVHUB_USERNAME --where "SignupUsername='$SCRATCH_ORG_USERNAME'"
          rm -f ~/.sfdx/$SCRATCH_ORG_USERNAME.json
          rm -f ~/.cumulusci/*/$SCRATCH_ORG_ALIAS.org
